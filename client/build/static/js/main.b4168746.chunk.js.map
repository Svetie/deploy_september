{"version":3,"sources":["components/AllPets.jsx","components/OnePet.jsx","components/NewPet.jsx","components/EditPet.jsx","App.js","reportWebVitals.js","index.js"],"names":["AllPets","useState","allPets","setAllPets","deletedClicked","useEffect","axios","get","then","res","console","log","data","results","catch","err","className","to","style","float","scope","map","pet","i","name","type","_id","OnePet","history","useHistory","id","useParams","setPet","likes","setLikes","onClick","e","petId","delete","push","width","margin","class","description","skill1","skill2","skill3","NewPet","valErrors","setValErrors","formInfo","setFormInfo","changeHandler","target","value","onSubmit","preventDefault","post","errors","for","onChange","placeholder","message","EditPet","put","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4168746.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nconst AllPets = () => {\r\n\r\n    // store all pets\r\n    const [ allPets, setAllPets ] = useState([]);\r\n\r\n    // deleted flag\r\n    const [ deletedClicked, setDeletedClicked ] = useState(false);\r\n\r\n    // call api upon rendering, save the info from db to allPets array\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8000/api/pets/sorted/bytype\")\r\n            .then(res=>{\r\n                console.log('res in allpets is ', res);\r\n                setAllPets(res.data.results); // set all pets array\r\n            })\r\n            .catch(err=>{\r\n                console.log(err);   // catch and log errors\r\n            })\r\n\r\n    },[deletedClicked])\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Link to=\"/pets/new\" className=\"btn btn-info\" style={{float: \"right\"}}>add a pet to the shelter</Link>\r\n            <h3>These pets are looking for a good home</h3>\r\n\r\n            <table className=\"table table-dark\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Type</th>\r\n                        <th scope=\"col\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                \r\n                    {\r\n                        allPets.map((pet, i)=>{ \r\n                            return <tbody>\r\n                            <tr key={i}>\r\n                                <td>{pet.name}</td>\r\n                                <td>{pet.type}</td>\r\n                                <td>\r\n                                    <Link to={`/pets/${pet._id}`} className=\"btn btn-success\">Details</Link> \r\n                                    <Link to={`/pets/${pet._id}/edit`} className=\"btn btn-primary ml-3\">Edit</Link> \r\n                                    {/* <button onClick={(e)=>deleteClickHandler(e, pet._id)} className=\"btn btn-danger ml-3\">Delete</button> */}\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        })\r\n                    }\r\n                \r\n            </table>            \r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default AllPets;","import React,{ useEffect, useState } from 'react';\r\nimport {useParams} from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst OnePet = () => {\r\n\r\n    // initialize history to redirect\r\n    const history = useHistory();\r\n    // id of pet to show/retrieve from db\r\n    const { id } = useParams();\r\n    // variable for pet\r\n    const [ pet, setPet ] = useState({});\r\n\r\n    // like a pet\r\n    let [ likes, setLikes ] = useState(0);\r\n\r\n    // get the pet from the db\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/api/pets/${id}`)\r\n        .then(res=>{\r\n            console.log('res one pet ', res);\r\n            setPet(res.data.results);   // set the pet\r\n        })\r\n\r\n        .catch(err=>{\r\n            console.log(err)    // errors\r\n        })\r\n    },[])\r\n\r\n    const deleteClickHandler = (e, petId) =>{\r\n        console.log(\"deleting a pet \", petId)\r\n        axios.delete(`http://localhost:8000/api/pets/${petId}`)\r\n            .then(res =>{\r\n                console.log('res after axios delete ', res)\r\n                history.push(\"/\");\r\n            })\r\n            .catch(err =>{\r\n                console.log('error is ', err)\r\n            })\r\n    }\r\n\r\n    const toLike = () =>{\r\n        setLikes(likes + 1);\r\n        console.log('Likes are ',likes)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h3>Details about {pet.name}</h3>\r\n            <Link to=\"/\" className=\"btn btn-secondary\">back to home</Link>\r\n            <button onClick={(e)=>deleteClickHandler(e, pet._id)} className=\"btn btn-danger ml-3\">Adopt {pet.name}</button>\r\n                                \r\n            <div style={{width: \"50%\", margin: \"0px auto\"}}>\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <h5>Pet Type: </h5>\r\n                </div>\r\n                <div class=\"col\">\r\n                    {pet.type}\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <h5>Description: </h5>\r\n                </div>\r\n                <div class=\"col\">\r\n                    {pet.description}\r\n                </div>\r\n            </div>\r\n            \r\n            {\r\n                // if skills exist\r\n                pet.skill1 || pet.skill2 || pet.skill3 ?\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <h5>Skills: </h5>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <p>{pet.skill1 ? pet.skill1 : \"\"}</p>\r\n                        <p>{pet.skill2 ? pet.skill2 : \"\"}</p>\r\n                        <p>{pet.skill3 ? pet.skill3 : \"\"}</p>\r\n                    </div>\r\n                </div> : \"\"\r\n            }\r\n            <button onClick={toLike} className=\"btn btn-success\">Like pet</button>\r\n            <p>Likes {likes}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OnePet;","import axios from 'axios';\r\nimport React, {useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NewPet = () => {\r\n\r\n    // history for redirect\r\n    const history = useHistory();\r\n\r\n    // store validation errors\r\n    let [valErrors, setValErrors] = useState({});\r\n\r\n    // variable to store the data from form\r\n    let [ formInfo, setFormInfo] = useState({\r\n        name: null,\r\n        type: null,\r\n        description: null,\r\n        skill1: \"\",\r\n        skill2: \"\",\r\n        skill3: \"\"\r\n    });\r\n\r\n\r\n    // set values from the form to formInfo variable\r\n    const changeHandler = (e) => {\r\n        console.log('Changing things');\r\n        console.log(e.target.name, e.target.value);\r\n            // set the form\r\n            setFormInfo({\r\n                ...formInfo,\r\n                [e.target.name]:e.target.value\r\n            })\r\n    }\r\n\r\n    // save new pet to the database\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log('submitted form')\r\n        axios.post(\"http://localhost:8000/api/pets\", formInfo)\r\n            .then(res=>{\r\n                console.log('response at submit form', res)\r\n                if(res.data.err){\r\n                    // do not redirect if errors\r\n                    // store the error object\r\n                    console.log(res.data.err.errors);\r\n                    setValErrors(res.data.err.errors);\r\n                } else {\r\n                    history.push(\"/\") // this is redirect\r\n                }\r\n                \r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Link to=\"/\" className=\"btn btn-secondary\">back to home</Link>\r\n            <h3>Know a pet needing a home?</h3>\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                    <label for=\"name\">Pet Name:</label>\r\n                    <input onChange={changeHandler} type=\"text\" name=\"name\" className=\"form-control\"  placeholder=\"Enter pet name\"/>\r\n                    <p className=\"text-danger\">{valErrors.name? valErrors.name.message : \"\"}</p>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                    <p>Skills (optional):</p>\r\n                    <label for=\"skill1\">Skill 1:</label>\r\n                    <input onChange={changeHandler} type=\"text\" name=\"skill1\" className=\"form-control\" placeholder=\"Skills\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                    <label for=\"type\">Pet Type:</label>\r\n                    <input onChange={changeHandler} type=\"text\" name=\"type\" className=\"form-control\"  placeholder=\"Enter pet type\"/>\r\n                    <p className=\"text-danger\">{valErrors.type? valErrors.type.message : \"\"}</p>\r\n                \r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                    <label for=\"skill2\">Skill 2:</label>\r\n                    <input onChange={changeHandler} type=\"text\" name=\"skill2\" className=\"form-control\" placeholder=\"Skills\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label for=\"description\">Pet Description:</label>\r\n                        <input onChange={changeHandler} type=\"text\" name=\"description\" className=\"form-control\"  placeholder=\"Description\"/>\r\n                        <p className=\"text-danger\">{valErrors.description? valErrors.description.message : \"\"}</p>\r\n                \r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label for=\"skill3\">Skill 3:</label>\r\n                        <input onChange={changeHandler} type=\"text\" name=\"skill3\" className=\"form-control\" placeholder=\"Skills\"/>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Add Pet</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewPet;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport axios from 'axios';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nconst EditPet = () => {\r\n\r\n    // get id from route\r\n    const { id } = useParams();\r\n\r\n    // variable to store a pet object\r\n    const [ pet, setPet ] = useState({});\r\n\r\n    // history to redirect\r\n    const history = useHistory();\r\n\r\n    // variable to store erros\r\n    const [ valErrors, setValErrors ] = useState({});\r\n\r\n    // retrieve the pet from db and store in pet variable\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/api/pets/${id}`)\r\n            .then(res=>{\r\n                console.log('res one ninja ', res)\r\n                setPet(res.data.results)\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n    },[id])\r\n\r\n    // set values from the form to formInfo variable\r\n    const changeHandler = (e) => {\r\n        console.log('Changing things');\r\n        console.log(e.target.name, e.target.value);\r\n            // set the form\r\n            setPet({\r\n                ...pet,\r\n                [e.target.name]:e.target.value\r\n            })\r\n    }\r\n\r\n        // save updated pet to the database\r\n        const submitHandler = (e) => {\r\n            e.preventDefault();\r\n            console.log('submitted form')\r\n            axios.put(`http://localhost:8000/api/pets/${id}`, pet)\r\n                .then(res=>{\r\n                    console.log('response at submit form', res)\r\n                    if(res.data.err){\r\n                        // do not redirect if errors\r\n                        // store the error object\r\n                        console.log(res.data.err.errors);\r\n                        setValErrors(res.data.err.errors);\r\n                    } else {\r\n                        history.push(\"/\") // this is redirect\r\n                    }\r\n                })\r\n                .catch(err=>{\r\n                    console.log(err)\r\n                })\r\n        }\r\n    return (\r\n        <div className=\"container\">\r\n            <h3>Edit {pet.name}</h3>\r\n            <Link to=\"/\" className=\"btn btn-secondary\">back to home</Link>\r\n            <h3>Know a pet needing a home?</h3>\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                    <label for=\"name\">Pet Name:</label>\r\n                    <input onChange={changeHandler} value={pet.name} type=\"text\" name=\"name\" className=\"form-control\"  placeholder=\"Enter pet name\"/>\r\n                    <p className=\"text-danger\">{valErrors.name ? valErrors.name.message : \"\" }</p>\r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                    <p>Skills (optional):</p>\r\n                    <label for=\"skill1\">Skill 1:</label>\r\n                    <input onChange={changeHandler} value={pet.skill1} type=\"text\" name=\"skill1\" className=\"form-control\" placeholder=\"Skills\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                    <label for=\"type\">Pet Type:</label>\r\n                    <input onChange={changeHandler} value={pet.type} type=\"text\" name=\"type\" className=\"form-control\"  placeholder=\"Enter pet type\"/>\r\n                    <p className=\"text-danger\">{valErrors.type ? valErrors.type.message : \"\" }</p>\r\n                    \r\n                \r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                    <label for=\"skill2\">Skill 2:</label>\r\n                    <input onChange={changeHandler} value={pet.skill2} type=\"text\" name=\"skill2\" className=\"form-control\" placeholder=\"Skills\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label for=\"description\">Pet Description:</label>\r\n                        <input onChange={changeHandler} value={pet.description} type=\"text\" name=\"description\" className=\"form-control\"  placeholder=\"Description\"/>\r\n                        <p className=\"text-danger\">{valErrors.description ? valErrors.description.message : \"\" }</p>\r\n                \r\n                    </div>\r\n                    <div className=\"form-group col-md-6\">\r\n                        <label for=\"skill3\">Skill 3:</label>\r\n                        <input onChange={changeHandler} value={pet.skill3} type=\"text\" name=\"skill3\" className=\"form-control\" placeholder=\"Skills\"/>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">Edit Pet</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default EditPet;","import React from 'react';\nimport './App.css';\nimport { useState } from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link \n} from \"react-router-dom\";\nimport AllPets from './components/AllPets';\nimport OnePet from './components/OnePet';\nimport NewPet from './components/NewPet';\nimport EditPet from './components/EditPet';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <h1>Pet Shelter</h1>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <AllPets></AllPets>\n        </Route>\n        <Route exact path=\"/pets/new\">\n          <NewPet></NewPet>\n        </Route>        \n        <Route exact path=\"/pets/:id\">\n          <OnePet></OnePet>\n        </Route>\n        <Route exact path=\"/pets/:id/edit\">\n          <EditPet></EditPet>\n        </Route>\n\n      </Switch>\n    </div>   \n    </BrowserRouter>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}